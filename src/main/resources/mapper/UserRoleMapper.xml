<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.feng.shiro.repository.dao.UserRoleDao">

    <resultMap id="BaseResultMap" type="com.feng.shiro.repository.domain.UserRole">
        <id column="id" property="id" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
        <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
        <result column="deleted" property="deleted" jdbcType="VARCHAR" javaType="java.lang.Integer"/>
        <result column="user_id" property="userId" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <result column="role_id" property="roleId" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <result column="description" property="description" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <association property="role" column="role_id" javaType="com.feng.shiro.repository.domain.Role"
                     select="com.feng.shiro.repository.dao.RoleDao.getById"></association>
    </resultMap>

    <sql id="Base_Column_List">
        `user_id`, `role_id`, `description`
    </sql>

    <sql id="normal_column_list">
        `gmt_create`, `gmt_modified`, `deleted`,
        <include refid="Base_Column_List"></include>
    </sql>

    <sql id="column_list">
        `id`,
        <include refid="normal_column_list"></include>
    </sql>

    <insert id="insert" parameterType="com.feng.shiro.repository.domain.UserRole">
        <selectKey keyProperty="id" order="AFTER" resultType="Long">
            SELECT last_insert_id()
        </selectKey>
        INSERT into
        user_role(<include refid="Base_Column_List"></include>)
        values(#{userId}, #{roleId}, #{description})
    </insert>

    <update id="deleteById" parameterType="long">
        update user_role
        set deleted = '1'
        where id = #{id}
    </update>


    <update id="deleteByUserId" parameterType="long">
        update user_role
        set deleted = '1'
        where user_id = #{userId}
    </update>

    <select id="getById" parameterType="long" resultMap="BaseResultMap">
        SELECT
        <include refid="column_list"/>
        FROM
        user_role
        WHERE
        id=#{id} and `deleted` = '0'
    </select>

    <select id="listAll" resultMap="BaseResultMap">
        SELECT
        <include refid="column_list"/>
        FROM
        user_role
        where `deleted` = '0'
        order by id desc
        <choose>
            <when test="offset != null and rows != null">
                limit #{offset},#{rows}
            </when>
            <otherwise>
                limit 0,10
            </otherwise>
        </choose>
    </select>

    <select id="count" resultType="long">
        SELECT
        count(*)
        FROM
        user_role
        where `deleted` = '0'
    </select>

    <select id="getByUser" parameterType="com.feng.shiro.repository.domain.User" resultMap="BaseResultMap">
        SELECT
        <include refid="column_list"/>
        FROM
        user_role
        where `deleted` = '0' and user_id=#{id}
    </select>


    <select id="getByUserId"  resultMap="BaseResultMap">
        SELECT
        <include refid="column_list"/>
        FROM
        user_role
        where `deleted` = '0' and user_id=#{userId}
    </select>


    <update id="update" parameterType="com.feng.shiro.repository.domain.UserRole">
        update user_role
        set `user_id`       = #{userId},
            `role_id` = #{roleId},
            `description` = #{description},
            `gmt_modified` = current_timestamp
        where user_id = #{userId} and `deleted` = '0'
    </update>

</mapper>